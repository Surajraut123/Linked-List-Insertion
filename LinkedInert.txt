#include <iostream>
#include <stdlib.h>
using namespace std;
struct Node
{
    int data;
    struct Node *next,*prev;
};
void traverselinkedlist(struct Node *ptr)
{
    while(ptr!=NULL)
    {
        cout<<"Element :"<<ptr->data<<endl;
        ptr=ptr->next;
    }
}

struct Node *insertlinkedlistatstart(struct Node *ptr,int num)
{
    struct Node *p=(struct Node *)malloc(sizeof(struct Node));
    p->data=num;
    p->prev = NULL;
    p->next = ptr;
    ptr->prev=p;
    return p;
}

struct Node *insertlinkedlistatend(struct Node *ptr,int num)
{
    struct Node *p=(struct Node *)malloc(sizeof(struct Node));
    struct Node *q = ptr;
    p->data = num;
    while(q->next!=NULL)
    {
        q=q->next;
    }
    p->next = q->next;
    p->prev = q;
    q->next=p;
    return ptr;
}

struct Node *insertlinkedlistatmiddle(struct Node *ptr , int num,int loc)
{
    struct Node *p=(struct Node *)malloc(sizeof(struct Node));
    struct Node *q = ptr;
    for(int i=0;i<loc-1;i++)
    {
        q = q->next;
    }
    p->data = num;
    p->prev=q;
    p->next = q->next;
    q->next->prev=p;
    q->next = p;
    return ptr;
}
int main()
{
    int step;
    struct Node *head,*second,*third,*fourth;
    head = (struct Node *)malloc(sizeof(struct Node));
    second = (struct Node *)malloc(sizeof(struct Node));
    third= (struct Node *)malloc(sizeof(struct Node));
    fourth = (struct Node *)malloc(sizeof(struct Node));
    
    head->data = 23;
    head->prev = NULL;
    head->next = second;
    
    second->data = 24;
    second->prev = head;
    second->next = third;
    
    third->data = 25;
    third->prev = second;
    third->next = fourth;
    
    fourth->data = 26;
    fourth->prev = third;
    fourth->next = NULL;
    do{
    
        
        cout<<" ENTER WHICH CONDITION FOR INSERTION YOU HAVE TO PERFORM  \n\t 1 :FOR TRAVERSING \n\t 2 :AT BEGGINING \n\t 3 :AT END \n\t 4 :AT MIDDLE "<<endl;
        cin>>step;
        
        switch(step)
        {
    
            case 1: cout<<"TRAVERSEING A LINKED LIST :"<<endl;
                    traverselinkedlist(head);
                    break;
                    
            case 2: cout<<"INSERT LINKED LIST AT BEGGINING :"<<endl;
                    head = insertlinkedlistatstart(head,22);
                    traverselinkedlist(head);
                    break;
                    
            case 3: cout<<"INSERT LINKED LIST AT END :"<<endl;
                    head = insertlinkedlistatend(head,27);
                    traverselinkedlist(head);
                    break;
                    
                    
            case 4: cout<<"INSERT LINKED LIST AT MIDDLE :"<<endl;
                    head = insertlinkedlistatmiddle(head,58,2);
                    traverselinkedlist(head);
                    break;
                    
            default :
                        cout<<"YOU ARE ENTER WRONG STEP "<<endl;
    };
    char des;
    cout<<"DO YOU WANT TO CONTINUE IF YES PRINT Y OTHERWISE N"<<endl;
    cin>>des;
    if(des=='Y')
        continue;
    else
        cout<<"Accepted your request ,Program is EXIT. "<<endl;
        break;
    }while(step!=5);    
    
    
    
}


